 <configuration>
   <system.webServer>
    <!-- https://tomasz.janczuk.org/2012/11/how-to-use-websockets-with-nodejs-apps.html -->
    <webSocket enabled="false" />

     <!-- indicates that the hello.js file is a node.js application 
     to be handled by the iisnode module -->
    
    <handlers>
      <add name="iisnode" path="dist/index.js" verb="*" modules="iisnode" />
    </handlers>

    <iisnode      
      node_env="%node_env%"
      nodeProcessCountPerApplication="1"
      maxConcurrentRequestsPerProcess="1024"
      maxNamedPipeConnectionRetry="100"
      namedPipeConnectionRetryDelay="250"      
      maxNamedPipeConnectionPoolSize="512"
      maxNamedPipePooledConnectionAge="30000"
      asyncCompletionThreadCount="0"
      initialRequestBufferSize="4096"
      maxRequestBufferSize="65536"
      watchedFiles="*.js;iisnode.yml"
      uncFileChangesPollingInterval="5000"      
      gracefulShutdownTimeout="60000"
      loggingEnabled="true"
      logDirectory="iisnode"
      debuggingEnabled="true"
      debugHeaderEnabled="false"
      debuggerPortRange="5058-6058"
      debuggerPathSegment="debug"
      maxLogFileSizeInKB="128"
      maxTotalLogFileSizeInKB="1024"
      maxLogFiles="20"
      devErrorsEnabled="true"
      flushResponse="false"      
      enableXFF="false"
      promoteServerVars=""
      configOverrides="iisnode.yml"
     />

     <!-- use URL rewriting to redirect the entire branch of the URL namespace
     to hello.js node.js application; for example, the following URLs will 
     all be handled by hello.js:
     
         http://localhost/node/express/hello/foo
         http://localhost/node/express/hello/bar
         
     -->

     <rewrite>
       <rules>
          <!-- <rule name="API">
            <match url="/api/*" />
            <action type="Rewrite" url="dist/index.js" />
          </rule> -->
         <!-- <rule name="DynamicContent">
               <conditions>
                  <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
               </conditions>
            <action type="Rewrite" url="dist/index.js"/>
         </rule> -->

         <!-- Don't interfere with requests for node-inspector debugging -->
         <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
            <match url="^dist/index.js\/debug[\/]?"/>
         </rule>

         <!-- First we consider whether the incoming URL matches a physical file in the /public folder -->
         <!-- <rule name="StaticContent" patternSyntax="Wildcard">
               <action type="Rewrite" url="public/{R:0}" logRewrittenUrl="true"/>
               <conditions>
                  <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true"/>
               </conditions>
            <match url="*.*"/>
         </rule> -->

         <!-- All other URLs are mapped to the Node.js application entry point -->
         <rule name="DynamicContent">
            
               <conditions>
                  <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
               </conditions>
            <action type="Rewrite" url="dist/index.js"/>
         </rule>

         <rule name="SocketIO" patternSyntax="ECMAScript">
               <match url="socket.io.+"/>
            <action type="Rewrite" url="dist/index.js"/>
         </rule>
       </rules>
     </rewrite>

     <!-- exclude node_modules directory and subdirectories from serving
     by IIS since these are implementation details of node.js applications -->
     
     <!-- <security>
       <requestFiltering>
         <hiddenSegments>
           <add segment="node_modules" />
         </hiddenSegments>
       </requestFiltering>
     </security>    
     <iisnode promoteServerVars="LOGON_USER" /> -->
   </system.webServer>
 </configuration>
